{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"about/","text":"About Page This self-guided book draws inspiration from the Arduino Learning Guide for Beginners by Cytron Technologies. While the foundation of this guide aligns with their work, it diverges by utilizing mBlock block programming instead of Arduino C programming for a different learning approach. Additionally, some images featured in this guide have been sourced from various places to enhance visual clarity and comprehension. Credit goes to the original creators of these images, and their contributions are duly appreciated. If any original creators find that the use of their images in this guide requires permission, or if they prefer not to have their images included, kindly inform me. I am committed to respecting intellectual property rights, and I will promptly remove any content upon request.","title":"About"},{"location":"about/#about-page","text":"This self-guided book draws inspiration from the Arduino Learning Guide for Beginners by Cytron Technologies. While the foundation of this guide aligns with their work, it diverges by utilizing mBlock block programming instead of Arduino C programming for a different learning approach. Additionally, some images featured in this guide have been sourced from various places to enhance visual clarity and comprehension. Credit goes to the original creators of these images, and their contributions are duly appreciated. If any original creators find that the use of their images in this guide requires permission, or if they prefer not to have their images included, kindly inform me. I am committed to respecting intellectual property rights, and I will promptly remove any content upon request.","title":"About Page"},{"location":"pc_lesson0/","text":"Lesson 0 - Setting up hardware and software Setting up hardware and software Task 1 - Connect the microcontroller to the computer Task 2 - Download and install the coding environment Go to mblock.makeblock.com/en-us/download/ Choose the suitable version for your operating system. Download and install mBLock 5 into your computer. Once you installed, launch mBlock 5 from the Start Menu or from your Desktop. The user interface will look something like this Let's add the Arduino UNO into the device section . Make sure Arduino Uno device is selected in the devices section . Then click Connect You will see this pop-up menu, if it shows \"No device can be detected...\", then check Show all connectable devices . Select the right COM device and click Connect . If you are unsure if that is the Maker Uno, disconnect all USB devices except the Maker Uno. Your Devices section should look like this. Task 3 - Switching between Live and Upload mode In mBlock, there are two modes we use: Live mode and Upload mode. Live : This is when your code runs right away on the device. Remember to \"Update Firmware\" every time you switch to Live Mode. Upload : Your code only runs when you click the button. You can change the mode through this Mode Switch toggle. When switching to Live coding, you will have to \"Update Firmware\". Switch to Live mode Click Update Firmware Click Updates We will often switch between Live and Upload mode throughout this unit. Remember to \"Update Firmware\" every time we switch to Live mode. End of Lesson 0 Assessment Open the link below and login using your Microsoft account to do the Quiz.","title":"Lesson 0 - Setting up"},{"location":"pc_lesson0/#lesson-0-setting-up-hardware-and-software","text":"Setting up hardware and software","title":"Lesson 0 - Setting up hardware and software"},{"location":"pc_lesson0/#task-1-connect-the-microcontroller-to-the-computer","text":"","title":"Task 1 - Connect the microcontroller to the computer"},{"location":"pc_lesson0/#task-2-download-and-install-the-coding-environment","text":"Go to mblock.makeblock.com/en-us/download/ Choose the suitable version for your operating system. Download and install mBLock 5 into your computer. Once you installed, launch mBlock 5 from the Start Menu or from your Desktop. The user interface will look something like this Let's add the Arduino UNO into the device section . Make sure Arduino Uno device is selected in the devices section . Then click Connect You will see this pop-up menu, if it shows \"No device can be detected...\", then check Show all connectable devices . Select the right COM device and click Connect . If you are unsure if that is the Maker Uno, disconnect all USB devices except the Maker Uno. Your Devices section should look like this.","title":"Task 2 - Download and install the coding environment"},{"location":"pc_lesson0/#task-3-switching-between-live-and-upload-mode","text":"In mBlock, there are two modes we use: Live mode and Upload mode. Live : This is when your code runs right away on the device. Remember to \"Update Firmware\" every time you switch to Live Mode. Upload : Your code only runs when you click the button. You can change the mode through this Mode Switch toggle. When switching to Live coding, you will have to \"Update Firmware\". Switch to Live mode Click Update Firmware Click Updates We will often switch between Live and Upload mode throughout this unit. Remember to \"Update Firmware\" every time we switch to Live mode.","title":"Task 3 - Switching between Live and Upload mode"},{"location":"pc_lesson0/#end-of-lesson-0-assessment","text":"Open the link below and login using your Microsoft account to do the Quiz.","title":"End of Lesson 0 Assessment"},{"location":"pc_lesson1/","text":"Lesson 1 - Digital Output Objectives: To program a single LED to blink. To program multiple LED to blink. To create different LED patterns or sequences. Task 1 - Blink an LED Drag and drop the following blocks into your code area. Press the green flag to run the code. Observe the LED on the microcontroller. If it does not light up. Make sure your firmware is updated and Live coding is turned on. How it works? What do you think would happen if you change the value high to low Now, let's make the LED blink. Modify the previous code to this code. Press the green flag to run the code. Observe the LED on the microcontroller. The LED at pin 9 should blink every 1 seconds. Challenge: What can you do so that the LED will blink faster? Task 2 - Blinking multiple LED","title":"Lesson 1 - Digital Output"},{"location":"pc_lesson1/#lesson-1-digital-output","text":"Objectives: To program a single LED to blink. To program multiple LED to blink. To create different LED patterns or sequences.","title":"Lesson 1 - Digital Output"},{"location":"pc_lesson1/#task-1-blink-an-led","text":"Drag and drop the following blocks into your code area. Press the green flag to run the code. Observe the LED on the microcontroller. If it does not light up. Make sure your firmware is updated and Live coding is turned on. How it works? What do you think would happen if you change the value high to low Now, let's make the LED blink. Modify the previous code to this code. Press the green flag to run the code. Observe the LED on the microcontroller. The LED at pin 9 should blink every 1 seconds. Challenge: What can you do so that the LED will blink faster?","title":"Task 1 - Blink an LED"},{"location":"pc_lesson1/#task-2-blinking-multiple-led","text":"","title":"Task 2 - Blinking multiple LED"},{"location":"pc_lesson2/","text":"Lesson 2 - Digital Input Setting the input","title":"Lesson 2 - Digital Input"},{"location":"pc_lesson2/#lesson-2-digital-input","text":"Setting the input","title":"Lesson 2 - Digital Input"},{"location":"pc_lesson3/","text":"Lesson 3 - Analogue Output","title":"Lesson 3 - Analogue Output"},{"location":"pc_lesson3/#lesson-3-analogue-output","text":"","title":"Lesson 3 - Analogue Output"},{"location":"pc_lesson4/","text":"Lesson 4 - Melody Tone","title":"Lesson 4 - Melody Tone"},{"location":"pc_lesson4/#lesson-4-melody-tone","text":"","title":"Lesson 4 - Melody Tone"},{"location":"pc_lesson5/","text":"Lesson 5 - Analogue Input","title":"Lesson 5 - Analogue Input"},{"location":"pc_lesson5/#lesson-5-analogue-input","text":"","title":"Lesson 5 - Analogue Input"},{"location":"pc_lesson6/","text":"Lesson 6 - DC Motor Project 14: Control a DC Motor Project 15: Controlling a motor speed using a push button","title":"Lesson 6 - DC Motor"},{"location":"pc_lesson6/#lesson-6-dc-motor","text":"","title":"Lesson 6 - DC Motor"},{"location":"pc_lesson6/#project-14-control-a-dc-motor","text":"","title":"Project 14: Control a DC Motor"},{"location":"pc_lesson6/#project-15-controlling-a-motor-speed-using-a-push-button","text":"","title":"Project 15: Controlling a motor speed using a push button"},{"location":"pc_lesson7/","text":"Lesson 7 - Ultrasonic Sensor Project 16: Setting up ultrasonic sensor Project 17: Building a rear bumper sensor","title":"Lesson 7 - Ultrasonic Sensor"},{"location":"pc_lesson7/#lesson-7-ultrasonic-sensor","text":"","title":"Lesson 7 - Ultrasonic Sensor"},{"location":"pc_lesson7/#project-16-setting-up-ultrasonic-sensor","text":"","title":"Project 16: Setting up ultrasonic sensor"},{"location":"pc_lesson7/#project-17-building-a-rear-bumper-sensor","text":"","title":"Project 17: Building a rear bumper sensor"}]}