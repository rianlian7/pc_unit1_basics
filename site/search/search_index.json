{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"about/","title":"About Page","text":"<p>This self-guided book draws inspiration from the Arduino Learning Guide for Beginners by Cytron Technologies. While the foundation of this guide aligns with their work, it diverges by utilizing mBlock block programming instead of Arduino C programming for a different learning approach.</p> <p>Additionally, some images featured in this guide have been sourced from various places to enhance visual clarity and comprehension. Credit goes to the original creators of these images, and their contributions are duly appreciated.</p> <p>If any original creators find that the use of their images in this guide requires permission, or if they prefer not to have their images included, kindly inform me. I am committed to respecting intellectual property rights, and I will promptly remove any content upon request.</p>"},{"location":"pc_lesson0/","title":"Lesson 0 - Setting up hardware and software","text":"<p>Setting up hardware and software</p>"},{"location":"pc_lesson0/#task-1-connect-the-microcontroller-to-the-computer","title":"Task 1 - Connect the microcontroller to the computer","text":""},{"location":"pc_lesson0/#task-2-download-and-install-the-coding-environment","title":"Task 2 - Download and install the coding environment","text":"<ol> <li> <p>Go to mblock.makeblock.com/en-us/download/</p> </li> <li> <p>Choose the suitable version for your operating system.</p> <p></p> </li> <li> <p>Download and install mBLock 5 into your computer.</p> </li> <li> <p>Once you installed, launch mBlock 5 from the Start Menu or from your Desktop.</p> <p></p> </li> <li> <p>The user interface will look something like this     </p> </li> <li> <p>Let's add the Arduino UNO into the device section.</p> <p></p> </li> <li> <p>Make sure Arduino Uno device is selected in the devices section. Then click Connect</p> <p></p> </li> <li> <p>You will see this pop-up menu, if it shows \"No device can be detected...\", then check Show all connectable devices.</p> <p> </p> </li> <li> <p>Select the right COM device and click Connect. </p> <p>If you are unsure if that is the Maker Uno, disconnect all USB devices except the Maker Uno.</p> </li> <li> <p>Your Devices section should look like this.</p> <p></p> </li> </ol>"},{"location":"pc_lesson0/#task-3-switching-between-live-and-upload-mode","title":"Task 3 - Switching between Live and Upload mode","text":"<ol> <li> <p>In mBlock, there are two modes we use: Live mode and Upload mode.</p> <ul> <li> <p>Live: This is when your code runs right away on the device. </p> <p>Remember to \"Update Firmware\" every time you switch to Live Mode.</p> </li> <li> <p>Upload: Your code only runs when you click the   button.</p> </li> </ul> </li> <li> <p>You can change the mode through this Mode Switch toggle.</p> <p></p> </li> <li> <p>When switching to Live coding, you will have to \"Update Firmware\".</p> <ol> <li>Switch to Live mode</li> <li>Click Update Firmware</li> <li>Click Updates</li> </ol> <p></p> </li> <li> <p>We will often switch between Live and Upload mode throughout this unit. Remember to \"Update Firmware\" every time we switch to Live mode.</p> </li> </ol>"},{"location":"pc_lesson0/#end-of-lesson-0-assessment","title":"End of Lesson 0 Assessment","text":"<p>Open the link below and login using your Microsoft account to do the Quiz.</p>"},{"location":"pc_lesson1/","title":"Lesson 1 - Digital Output","text":"<p>Setting the output</p>"},{"location":"pc_lesson2/","title":"Lesson 2 - Digital Input","text":"<p>Setting the input</p>"},{"location":"pc_lesson3/","title":"Lesson 3 - Analogue Output","text":""},{"location":"pc_lesson4/","title":"Lesson 4 - Melody Tone","text":""},{"location":"pc_lesson5/","title":"Lesson 5 - Analogue Input","text":""},{"location":"pc_lesson6/","title":"Lesson 6 - DC Motor","text":""},{"location":"pc_lesson6/#project-14-control-a-dc-motor","title":"Project 14: Control a DC Motor","text":""},{"location":"pc_lesson6/#project-15-controlling-a-motor-speed-using-a-push-button","title":"Project 15: Controlling a motor speed using a push button","text":""},{"location":"pc_lesson7/","title":"Lesson 7 - Ultrasonic Sensor","text":""},{"location":"pc_lesson7/#project-16-setting-up-ultrasonic-sensor","title":"Project 16: Setting up ultrasonic sensor","text":""},{"location":"pc_lesson7/#project-17-building-a-rear-bumper-sensor","title":"Project 17: Building a rear bumper sensor","text":""}]}